'''
Компьютер (Computer)
    ID_computer
    User_Name
    Price
    ID_room
Дисплейный класс (Room)
    ID_room
    Owner_name
Компьютеры дисплейного класса (Computers_in_room)
    ID_room
    ID_computer
Вариант Г.
«Отдел» и «Сотрудник» связаны соотношением один-ко-многим. 
Выведите список всех отделов (ROOMS) у которых название(Owner_name) начинается с буквы «А», 
и список работающих в них (Computers.User_name)сотрудников.
«Отдел» и «Сотрудник» связаны соотношением один-ко-многим. 
Выведите список отделов с максимальной (Computer.Price) зарплатой сотрудников в каждом (Room) отделе,
 отсортированный по максимальной зарплате.
«Отдел» и «Сотрудник» связаны соотношением многие-ко-многим. 
Выведите список всех связанных сотрудников (Computer.User_Name( or ID_computer)) и отделов (ROOM), отсортированный по отделам, 
сортировка по сотрудникам произвольная. 
Класс «Сотрудник», содержащий поля:
    ID записи о сотруднике;
    Фамилия сотрудника;
    Зарплата (количественный признак);
    ID записи об отделе. (для реализации связи один-ко-многим)
Класс «Отдел», содержащий поля:
    ID записи об отделе;
    Наименование отдела.
Класс «Сотрудники отдела», содержащий поля:
    ID записи о сотруднике;
    ID записи об отделе.
'''
Задание А1
[('Петров', 35000, 'архивный отдел ресурсов'), ('Иваненко', 45000, 'бухгалтерия'), ('Иванов', 35000, 'бухгалтерия'), ('Иванин', 25000, 'бухгалтерия'), ('Артамонов', 25000, 'отдел кадров')]

Задание А2
[('бухгалтерия', 105000), ('архивный отдел ресурсов', 35000), ('отдел кадров', 25000)]

Задание А3
{'отдел кадров': ['Артамонов'], 'архивный отдел ресурсов': ['Петров'], 'отдел (другой) кадров': ['Артамонов'], 'архивный (другой) отдел ресурсов': ['Петров']}


'''
    «Отдел» и «Сотрудник» связаны соотношением один-ко-многим. 
    Выведите список всех отделов (ROOMS) у которых название(Owner_name) начинается с буквы «А», 
    и список работающих в них (Computers.User_name)сотрудников.
    '''
    '''
    print('Задание А1')
    #словарь, где Owner_name - ключ,а список из компьютеров-значение
    keys = []
    for x in one_to_many :
        if x[3][0] == 'А':
            if not x[3] in keys:
                keys.add([x[3],x[2]])
    res = dict.fromkeys(keys,[])
    for x in one_to_many:
        res[[x[3],x[2]]].add(x[0])
    print (res)
    '''
    '''
    print('\nЗадание А2')
    res_12_unsorted = []
    # Перебираем все отделы
    for d in deps:
        # Список сотрудников отдела
        d_emps = list(filter(lambda i: i[2]==d.name, one_to_many))
        # Если отдел не пустой        
        if len(d_emps) > 0:
            # Зарплаты сотрудников отдела
            d_sals = [sal for _,sal,_ in d_emps]
            # Суммарная зарплата сотрудников отдела
            d_sals_sum = sum(d_sals)
            res_12_unsorted.append((d.name, d_sals_sum))
 
    # Сортировка по суммарной зарплате
    res_12 = sorted(res_12_unsorted, key=itemgetter(1), reverse=True)
    print(res_12)
 
    print('\nЗадание А3')
    res_13 = {}
    # Перебираем все отделы
    for d in deps:
        if 'отдел' in d.name:
            # Список сотрудников отдела
            d_emps = list(filter(lambda i: i[2]==d.name, many_to_many))
            # Только ФИО сотрудников
            d_emps_names = [x for x,_,_ in d_emps]
            # Добавляем результат в словарь
            # ключ - отдел, значение - список фамилий
            res_13[d.name] = d_emps_names
 
    print(res_13)
    '''
